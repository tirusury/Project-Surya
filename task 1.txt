	-- Task 1 --
	-- 1.Database creation --

	CREATE TABLE if not exists studentinfo (STU_ID INT PRIMARY KEY,
	STU_NAME VARCHAR(255),
	DOB DATE,
	Phone_no numeric(10),
	email VARCHAR(255),
	address VARCHAR(255));

	CREATE TABLE if not exists Coursesinfo (Course_ID INT PRIMARY KEY,
	Course_NAME VARCHAR(255),
	Course_instructor VARCHAR(255));

	CREATE TABLE if not exists enrollmentinfo (Enrollment_ID INT PRIMARY KEY,
	stu_ID INT,
	course_ID INT,
	foreign key (stu_ID) references studentinfo(stu_id),
	foreign key (course_id) references coursesinfo(course_id)
	);

	-- 2. Data Creation --

	INSERT INTO studentinfo (STU_ID, STU_NAME, DOB, PHONE_NO, EMAIL, ADDRESS) VALUES
	(1, 'ALI', '1990-01-26', 8888888888, 'ALI@GMAIL.COM', 'WHITEFIELD, BENGALURU'),
	(2, 'RAM', '1990-08-15', 999999999, 'RAM@GMAIL.COM', 'CHEMBUR, MUMBAI'),
	(3, 'JOHN', '1990-11-01', 7777777777, 'JOHN@GMAIL.COM', 'KODAMBAKAM, CHENNAI');

	INSERT INTO coursesinfo (COURSE_ID, COURSE_NAME, COURSE_INSTRUCTOR) VALUES
	(101, 'SQL', 'SHAWN'),
	(202, 'PYTHON', 'PANKAJ'),
	(303, 'JAVA', 'DAN');

	INSERT INTO ENROLLMENTINFO (ENROLLMENT_ID, STU_ID, COURSE_ID) VALUES
	(111, '1', '101'),
	(222, '2', '202'),
	(221, '2', '101'),
	(333, '3', '303'),
	(113, '1', '303'),
	(112, '1', '202');

	-- 3.Retrive student info --

	select s.stu_name as StudentName,
	s.Phone_no as PhoneNumber,
	s.email AS EMAIL,
	s.address as Address,
	e.enrollment_ID as EnrollmentID,
	e.course_ID as CourseID
	from studentinfo s join enrollmentinfo e ON s.stu_id = e.stu_id;

	-- B. QUERY TO RETRIVE COURSE ID OF A SPECIFC STUDENT 
	SELECT E.COURSE_ID FROM ENROLLMENTINFO E
	JOIN studentinfo S ON E.STU_ID = S.STU_ID
	WHERE S.STU_NAME = 'RAM';

	-- C. RETRIEVE COURSE INFO --

	SELECT c.course_ID as CourseID, C.COURSE_NAME AS CourseName, c.course_instructor as InstructorName from coursesinfo C;

	-- d. query to retrive course info of specific course --
	select course_name, course_instructor, course_id from coursesinfo
	where course_name = 'Python';

	select * from coursesinfo;

	-- e. query to retrive course info of multiple course --
	select course_name, course_instructor, course_id from coursesinfo
	where course_name IN ('JAVA','SQL');

	-- 4. Reporting & Analytics --
	-- retrive no of students enrolled in each course --

	SELECT c.Course_NAME AS CourseName, COUNT(e.stu_ID) AS NumberOfStudents
	FROM Coursesinfo c
	LEFT JOIN enrollmentinfo e ON c.Course_ID = e.course_ID
	GROUP BY c.Course_NAME;

	-- retrive list of students in specific course --
	SELECT s.STU_NAME AS StudentName
	FROM studentinfo s
	JOIN enrollmentinfo e ON s.STU_ID = e.stu_ID
	JOIN coursesinfo c ON e.course_ID = c.Course_ID
	WHERE c.Course_NAME = 'JAVA';

	-- retrive count of students enrolled for each instructor --
	SELECT ci.Course_instructor AS InstructorName, COUNT(e.stu_ID) AS StudentCount
	FROM enrollmentinfo e JOIN Coursesinfo ci ON e.course_ID = ci.Course_ID
	GROUP BY ci.Course_instructor;

	-- retrive list of students enrolled in multiple courses --
	SELECT s.STU_ID AS StudentID, s.STU_NAME AS StudentName, count(e.course_ID) as EnrollmentCount FROM studentinfo s
	JOIN enrollmentinfo e ON s.STU_ID = e.stu_ID 
	GROUP BY s.STU_ID, s.STU_NAME
	HAVING COUNT(e.course_ID) > 1
	order by enrollmentcount DESC;
